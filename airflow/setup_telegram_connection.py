#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ Airflow.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
"""

import os
import sys
from airflow import settings
from airflow.models import Connection
from sqlalchemy.exc import IntegrityError

def create_telegram_connection():
    """–°–æ–∑–¥–∞–µ—Ç Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ Airflow."""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.environ.get('TELEGRAM_BOT_TOKEN')
    chat_id = os.environ.get('TELEGRAM_CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print(f"TELEGRAM_BOT_TOKEN: {'‚úÖ' if bot_token else '‚ùå'}")
        print(f"TELEGRAM_CHAT_ID: {'‚úÖ' if chat_id else '‚ùå'}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    conn = Connection(
        conn_id='telegram_default',
        conn_type='telegram',
        host=chat_id,  # Chat ID –∏–¥–µ—Ç –≤ –ø–æ–ª–µ Host
        password=bot_token,  # Bot Token –∏–¥–µ—Ç –≤ –ø–æ–ª–µ Password
        description='Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)'
    )
    
    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        session = settings.Session()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        existing_conn = session.query(Connection).filter(
            Connection.conn_id == 'telegram_default'
        ).first()
        
        if existing_conn:
            print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è telegram_default...")
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            existing_conn.host = chat_id
            existing_conn.password = bot_token
            existing_conn.description = 'Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)'
        else:
            print(f"üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è telegram_default...")
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            session.add(conn)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        session.close()
        
        print("‚úÖ Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!")
        print(f"   Connection ID: telegram_default")
        print(f"   Chat ID: {chat_id}")
        print(f"   Bot Token: {bot_token[:10]}...{bot_token[-10:] if len(bot_token) > 20 else '***'}")
        
        return True
        
    except IntegrityError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        session.rollback()
        session.close()
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        if 'session' in locals():
            session.rollback()
            session.close()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ Airflow...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Airflow
        from airflow import configuration
        configuration.load_test_config()
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        success = create_telegram_connection()
        
        if success:
            print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            sys.exit(0)
        else:
            print("üí• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π!")
            sys.exit(1)
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
